{
  "files.autoSave": "afterDelay",
  "editor.formatOnSave": true,
  "security.workspace.trust.untrustedFiles": "open",
  "editor.fontSize": 11,
  "editor.tabSize": 4,
  "editor.minimap.enabled": false,
  "editor.lineNumbers": "relative",
  "editor.renderLineHighlight": "all",
  "workbench.tips.enabled": false,
  "breadcrumbs.icons": false,
  "workbench.activityBar.location": "bottom",
  "editor.cursorBlinking": "solid",
  "editor.cursorStyle": "line-thin",
  "vim.sneakUseIgnorecaseAndSmartcase": true,
  "vim.statusBarColors.easymotioninputmode": "",
  "vim.statusBarColors.easymotionmode": "",
  "vim.statusBarColors.normal": "",
  "vim.statusBarColors.commandlineinprogress": "",
  "vim.useSystemClipboard": true,
  "editor.inlayHints.enabled": "off",
  "editor.parameterHints.enabled": false,
  //Set the leader key to space
  "vim.leader": " ",
  // Make sure we are starting in normal mode and not visual mode or insert mode
  "vim.startInInsertMode": false,
  // Set our vim keybinds in normal mode
  "vim.normalModeKeyBindings": [
    // Open file tree with leader n
    {
      "before": [
        "<leader>",
        "n"
      ],
      "commands": [
        "workbench.action.toggleSidebarVisibility"
      ]
    },
    // Create a split pane vertical
    {
      "before": [
        "<leader>",
        "s"
      ],
      "commands": [
        "workbench.action.splitEditorRight"
      ]
    },
    // Comment a line out with leader c
    {
      "before": [
        "<leader>",
        "c"
      ],
      "commands": [
        "editor.action.commentLine"
      ]
    },
    // Open fuzzy finder
    {
      "before": [
        "<leader>",
        "s",
        "f"
      ],
      "commands": [
        "workbench.action.quickOpen"
      ]
    },
    // Open the search window
    {
      "before": [
        "<leader>",
        "s",
        "s"
      ],
      "commands": [
        "actions.find"
      ]
    },
    // Add other keybinds here that need leader, if they dont, put them in the keybindings.json file
    //Add here
  ],
  // Set ClangFormat as the default formatter for most files
  "[cpp]": {
    "editor.defaultFormatter": "xaver.clang-format"
  },
  "[c]": {
    "editor.defaultFormatter": "xaver.clang-format"
  },
  "workbench.startupEditor": "none",
  "workbench.editor.empty.hint": "hidden",
  "editor.stickyScroll.enabled": false,
  "explorer.confirmDragAndDrop": false,
  "[csharp]": {
    "editor.defaultFormatter": "ms-dotnettools.csharp"
  },
  "workbench.colorCustomizations": {
    "[Default Light+]": {
      "editor.background": "#f4f4f4", // softer off-white background
      "editor.foreground": "#222222", // softer dark grey text
      "sideBar.background": "#f0f0f0", // sidebar softer grey
      "statusBar.background": "#cccccc", // bottom bar light grey
      "activityBar.background": "#eaeaea", // left activity bar
      "titleBar.activeBackground": "#f2f2f2", // title bar background
      "titleBar.activeForeground": "#222222", // title bar text
      "editor.selectionBackground": "#dcdcdc", // selection highlight
      "editor.lineHighlightBackground": "#ebebeb", // highlight active line
      "editorCursor.foreground": "#444444" // softer dark cursor
    }
  },
  "workbench.secondarySideBar.defaultVisibility": "hidden",
  "dotnet.codeLens.enableReferencesCodeLens": false,
  "chat.commandCenter.enabled": false,
  "workbench.layoutControl.enabled": false,
  "workbench.navigationControl.enabled": false,
  "window.commandCenter": false,
  "workbench.editor.editorActionsLocation": "titleBar",
  "rust-analyzer.inlayHints.parameterHints.enable": false,
  "rust-analyzer.inlayHints.typeHints.enable": false,
  "rust-analyzer.lens.run.enable": false,
  "rust-analyzer.lens.debug.enable": false,
  "rust-analyzer.inlayHints.chainingHints.enable": false,
  "workbench.colorTheme": "Default Light+",
}
